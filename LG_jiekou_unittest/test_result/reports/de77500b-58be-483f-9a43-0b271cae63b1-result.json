{"name": "test_register_11", "status": "failed", "statusDetails": {"message": "AssertionError: 0 != 2", "trace": "self = <test_register.Register testMethod=test_register_11>\nitem = {'case_id': 11, 'check_sql': None, 'data': '{\"mobile_phone\":*phone*,\"pwd\":\"12345678\",\"type\":1,\"regname\":\"12345678909\"}', 'expected': '{\"code\":2,\"msg\":\"用户昵称长度超过10位\"}', ...}\n\n    @my_ddt1.data(*case_data)\n    def test_register(self,item):\n        url=conf.get('env', 'base_url')+item['url']\n        method=item['method']\n        headers=eval(conf.get('env', 'headers'))\n        expected=eval(item['expected'])\n        data=item['data']\n        if '*phone*' in data:\n            phone = tools.random_phone()\n            data=data.replace('*phone*',phone)\n        data=eval(data)\n        res = requests.request(url=url, method=method, json=data, headers=headers)\n        # print(\"预期结果：\", expected)\n        # print(\"实际结果：\", res.text)\n        try:\n            self.assertEqual(res.json()['code'],expected['code'])\n            self.assertEqual(res.json()['msg'], expected['msg'])\n            if item['check_sql']:\n                res = db.find_all(item['check_sql'].format(data['mobile_phone']))\n                self.assertTrue(res)\n                print(res)\n        except Exception as  e:\n            log.error(f'注册：{item[\"title\"]}失败！')\n            log.exception(e)\n>           raise e\n\ntestcase\\test_register.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntestcase\\test_register.py:33: in test_register\n    self.assertEqual(res.json()['code'],expected['code'])\nE   AssertionError: 0 != 2"}, "description": "注册名11位", "attachments": [{"name": "log", "source": "3f8a11cb-e19e-4a65-9301-2e17b121be32-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "9e34a2dd-6eff-44e8-bdb9-6b8cc2e7964f-attachment.txt", "type": "text/plain"}], "start": 1638597168277, "stop": 1638597168537, "uuid": "635d8006-3dc0-489a-9c68-d5014240e654", "historyId": "2489a4b53eed83f89b96ef1a9b22e67f", "testCaseId": "67824ff11857a7f74561e76d2697eb46", "fullName": "testcase.test_register.Register#test_register_11", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_register"}, {"name": "subSuite", "value": "Register"}, {"name": "host", "value": "PC201706040943"}, {"name": "thread", "value": "8696-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_register"}]}