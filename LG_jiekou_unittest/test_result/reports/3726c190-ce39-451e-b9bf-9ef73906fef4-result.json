{"name": "test_withdraw_09", "status": "failed", "statusDetails": {"message": "AssertionError: 0 != 2", "trace": "self = <test_withdraw.Withdraw testMethod=test_withdraw_09>\nitem = {'case_id': 9, 'check_sql': None, 'data': '{\"member_id\": \"#member_id#\",\"amount\": 0}', 'expected': '{\"code\":2,\"msg\":\"金额必须大于0并且小于或者等于500000\"}', ...}\n\n    @my_ddt1.data(*case_data)\n    def test_withdraw(self,item):\n        url=conf.get('env','base_url')+item['url']\n        headers = eval(conf.get('env', 'headers'))\n        headers['Authorization'] = self.token\n        method=item['method']\n        expected=eval(item['expected'])\n        data=item['data']\n        data=eval(replace_data(data,Withdraw))\n    \n        if item['check_sql']:\n            sql = f\"select leave_amount from futureloan.member where id={self.member_id}\"\n            db_leave_amount_before = db.find_all(sql)[0]['leave_amount']\n    \n            sql = f\"SELECT COUNT(1) FROM futureloan.financelog,futureloan.member WHERE pay_member_id = member.id AND member.id={self.member_id}\"\n            count_befor = db.find_all(sql)[0]['COUNT(1)']\n    \n        res=requests.request(url=url,method=method,json=data,headers=headers)\n        print(res.text)\n        print(item['expected'])\n        try:\n            if expected['msg']=='OK':\n                leave_amount_after = jsonpath(res.json(), '$..leave_amount')[0]\n                self.assertEqual((decimal.Decimal(str(self.leave_amount_before))-decimal.Decimal(str(leave_amount_after))),\n                                 decimal.Decimal(str(data['amount'])))\n    \n                sql = f\"select leave_amount from futureloan.member where id={self.member_id}\"\n                db_leave_amount_after = db.find_all(sql)[0]['leave_amount']\n                self.assertEqual((db_leave_amount_before-db_leave_amount_after),\n                                 decimal.Decimal(str(data['amount'])))\n    \n                sql = f\"SELECT COUNT(1) FROM futureloan.financelog,futureloan.member WHERE pay_member_id = member.id AND member.id={self.member_id}\"\n                count_after = db.find_all(sql)[0]['COUNT(1)']\n                self.assertEqual((count_after-count_befor),1)\n    \n            self.assertEqual(res.json()['code'],expected['code'])\n            self.assertEqual(res.json()['msg'], expected['msg'])\n        except Exception as e:\n            log.error(f\"{item['interface']}：{item['title']}【失败】*****\")\n            log.exception(e)\n>           raise e\n\ntestcase\\test_withdraw.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntestcase\\test_withdraw.py:64: in test_withdraw\n    self.assertEqual(res.json()['code'],expected['code'])\nE   AssertionError: 0 != 2"}, "description": "提现金额为0", "attachments": [{"name": "log", "source": "5b72ea10-c8dc-425f-87ae-aad2eb3f398f-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "a01075cb-07ac-418f-a608-0f6976f4e352-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "c3f5d1b9-2c07-4358-8435-9502f83db74d-attachment.txt", "type": "text/plain"}], "start": 1638596609328, "stop": 1638596609516, "uuid": "aa1132cf-2d75-42df-b4e2-9d680562200d", "historyId": "a09e2b786a7e9f2c031dc7ca5044d8b3", "testCaseId": "07214452ae4d7f93bceabdad1a465bd3", "fullName": "testcase.test_withdraw.Withdraw#test_withdraw_09", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_withdraw"}, {"name": "subSuite", "value": "Withdraw"}, {"name": "host", "value": "PC201706040943"}, {"name": "thread", "value": "10132-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_withdraw"}]}